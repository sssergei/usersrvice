// Code generated by go-swagger; DO NOT EDIT.

package user_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"usersrvice/proto/user/v1/models"
)

// UserServiceScheduleReminderOKCode is the HTTP code returned for type UserServiceScheduleReminderOK
const UserServiceScheduleReminderOKCode int = 200

/*UserServiceScheduleReminderOK A successful response.

swagger:response userServiceScheduleReminderOK
*/
type UserServiceScheduleReminderOK struct {

	/*
	  In: Body
	*/
	Payload *models.V1ScheduleReminderResponse `json:"body,omitempty"`
}

// NewUserServiceScheduleReminderOK creates UserServiceScheduleReminderOK with default headers values
func NewUserServiceScheduleReminderOK() *UserServiceScheduleReminderOK {

	return &UserServiceScheduleReminderOK{}
}

// WithPayload adds the payload to the user service schedule reminder o k response
func (o *UserServiceScheduleReminderOK) WithPayload(payload *models.V1ScheduleReminderResponse) *UserServiceScheduleReminderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user service schedule reminder o k response
func (o *UserServiceScheduleReminderOK) SetPayload(payload *models.V1ScheduleReminderResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserServiceScheduleReminderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UserServiceScheduleReminderDefault An unexpected error response.

swagger:response userServiceScheduleReminderDefault
*/
type UserServiceScheduleReminderDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.RPCStatus `json:"body,omitempty"`
}

// NewUserServiceScheduleReminderDefault creates UserServiceScheduleReminderDefault with default headers values
func NewUserServiceScheduleReminderDefault(code int) *UserServiceScheduleReminderDefault {
	if code <= 0 {
		code = 500
	}

	return &UserServiceScheduleReminderDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user service schedule reminder default response
func (o *UserServiceScheduleReminderDefault) WithStatusCode(code int) *UserServiceScheduleReminderDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user service schedule reminder default response
func (o *UserServiceScheduleReminderDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user service schedule reminder default response
func (o *UserServiceScheduleReminderDefault) WithPayload(payload *models.RPCStatus) *UserServiceScheduleReminderDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user service schedule reminder default response
func (o *UserServiceScheduleReminderDefault) SetPayload(payload *models.RPCStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserServiceScheduleReminderDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
